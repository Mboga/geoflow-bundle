name: test_gdal

on:
  push:
    branches:
      - build
    paths-ignore:
      - '**.md'

defaults:
  run:
    shell: bash

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}-test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkg_installation_root: C:/vcpkg
    #            - os: ubuntu-latest
    #              triplet: x64-linux
    #            - os: macos-latest
    #              triplet: x64-osx

    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
      VCPKG_ROOT: ${{ matrix.vcpkg_installation_root }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}
#      - name: Restore artifacts, or setup vcpkg for building artifacts
#        uses: lukka/run-vcpkg@v10.1
#        id: runvcpkg
#        with:
#          vcpkgDirectory: ${{ github.workspace }}/buildtools/vcpkg
#          vcpkgJsonGlob: ./test_plugin/vcpkg.json
#          runVcpkgInstall: false # Once we have a global CMakeLists, we can let CMake run vcpkg, which is the recommended way by the run-vcpkg action: https://github.com/lukka/CppBuildTasks-Validation/blob/321e621aec7f349c7ae1b05433985dc008978c57/.github/workflows/hosted-ninja-vcpkg_submod-triplet.yml#L57-L63
#      - name: integrate vcpkg
#        run: vcpkg integrate install
      - name: build gdal plugin
        run: |
          cd ./test_plugin
          mkdir build
          cd build
          cmake ..
          cmake --build .