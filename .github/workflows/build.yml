name: Build with CPack

on:
  push:
    branches:
      - build-cmake
    paths-ignore:
      - '**.md'

defaults:
  run:
    shell: bash

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkg_installation_root: C:/vcpkg
            exe_ext: exe
            exe_os: win64
    #            - os: ubuntu-latest
    #              triplet: x64-linux
    #            - os: macos-latest
    #              triplet: x64-osx

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}
      - name: Get vcpkg version
        run: |
          echo "vcpkg_version=$(vcpkg version | grep -o '[0-9].*')" >> $GITHUB_ENV
          echo "vcpkg_version=$(vcpkg version | grep -o '[0-9].*')"
      - name: Cache vcpkg
        uses: actions/cache@v2
        with:
          path: ${{ matrix.vcpkg_installation_root }}
          key: ${{ runner.os }}-${{ env.vcpkg_version }}-${{ hashFiles('vcpkg.json') }}
      # Need to use $GITHUB_WORKSPACE instead of ${{ github.workspace }}, because we are using shell and on windows
      # the ${{ github.workspace }} has back-slashes, while $GITHUB_WORKSPACE has forward-slashes
      - name: Make directories
        run: mkdir $GITHUB_WORKSPACE/build
      - name: CMake build
        run: |
          cmake \
            -Dlaslib_DIR=$GITHUB_WORKSPACE/build/vcpkg_installed/${{ matrix.triplet }}/share/lastools/LASlib \
            -DGFP_WITH_LOD2=OFF \
            -DVCPKG_DEFAULT_TRIPLET=${{ matrix.triplet }} \
            -DCMAKE_TOOLCHAIN_FILE=${{ matrix.vcpkg_installation_root }}/scripts/buildsystems/vcpkg.cmake \
            -S $GITHUB_WORKSPACE \
            -B $GITHUB_WORKSPACE/build
          cmake --build $GITHUB_WORKSPACE/build --config Release
      - name: CPack package executable
        run: |
          cd $GITHUB_WORKSPACE/build
          cpack -C Release --verbose
      - name: Upload CPack artifact
        uses: actions/upload-artifact@v3
        with:
          name: Geoflow-${{ matrix.exe_os }}.${{ matrix.exe_ext }}
          path: build/Geoflow-*-${{ matrix.exe_os }}.${{ matrix.exe_ext }}
          retention-days: 1
